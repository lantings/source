#!/usr/bin/env python
# -*- encoding: utf-8 -*-


from ftplib import FTP
import re
import os
import json
import math
import time
now_time = time.strftime("%Y%m%d",time.localtime())
ftp = FTP()
data_unitname_path = "/opt/datatom/dana_ftp_api/data/"
md5_file_path = "/opt/datatom/dana_ftp_api/history_data/"


def connect_ftp(ftpip,ftpport,ftpuser,ftppasswd):
	ftp.connect(host=ftpip, port=ftpport)
	ftp.login(user=ftpuser, passwd=ftppasswd)
	print("login succeed")

def upload_ftp(ftpip,ftpport,ftpuser,ftppasswd,filepath,tablename,unitname):
	#ftp.cwd(filepath)
	connect_ftp(ftpip,ftpport,ftpuser,ftppasswd)
	x = ftp.nlst(filepath)
	lists = []
	for i in range(len(x)):
		#判断传入的表名是否存在对应的文件
		#b = x.rsplit('_',1)[0].split('_',1)[0]
		b = r"(txt|csv|xml)_%s_[0-9]{8}(\.([a-zA-Z]{3}))?(.md5)?"%tablename
		#b = r"\w+_%s_[0-9]{8}(.[a-zA-Z])+.*+"%tablename
		#pat = re.compile(r'(\w+_{}_\d+\..*)|(\w+_{}_\d+)'.format(tablename,tablename))


		#re_match = pat.findall(x[i].split("/")[-1])
		re_match = re.match(b,x[i].split("/")[-1])
		print(type(re_match))

		if re_match:
			print("file is match .... loading this file")
			#检查我们要创建的委办局目录是否存在
			data_unitname = data_unitname_path+unitname
			if os.path.exists(data_unitname)==False:
				os.mkdir(data_unitname)
			else:
				print("weibanju dirname is already created")
			#创建委办局下一级目录(数据库名+表名)
			dirname_data = data_unitname+"/"+tablename
			#检查我们要创建的委办局目录下的 数据库_表 目录是否存在
			if os.path.exists(dirname_data)==False:
			 	os.mkdir(dirname_data)
			else:
				print("db_tablename  dirname is already created")
			re_group = re_match.group()
			#将文件下载到指定文件夹
			print(dirname_data+"/"+re_group)
			list_set = set(x)
			all = filepath+re_group
			#print()
			#print(list_set,all)
			if all in list_set:
				with open(dirname_data+"/"+re_group,"wb") as f:
					ftp.retrbinary('RETR '+filepath+"/"+re_group,f.write)
					ftp.delete(filepath+"/"+re_group)
				f.close()
				lists.append(re_group)
			else:
				print("file re_match file is not exit")
		else:
			print("searching files........not match")
	ftp.quit()
	lst = list(set(lists))
	#print('----------------this is lists-------download file',lst)
	length = len(lst)
	if length==0:
		res = {"code":0,"result":"没有下载到文件"}
		tmp = []
		tmp.append(res)
		tmps = json.dumps(tmp)
		return tmps
	# else:
	rst = []
	result = {}
	# 	for i in lst:
	# 		size = os.path.getsize(dirname_data+"/"+i)
	# 		rests = {"code":1,"size":size,"filename":i,"dirname":dirname_data}
	# 		rst.append(rests)
	# 	res = json.dumps(rst)
	# 	return res	

    
    #创建委办局  /opt/datatom/dana_ftp_api/history_data/
	history_unitname=md5_file_path+unitname                
    #检查unitname文件是否存在
	if os.path.exists(history_unitname)==False:
		os.mkdir(history_unitname)
	history_data = history_unitname+"/"+tablename+"_"+now_time

	if os.path.exists(history_data)==False:
		os.mkdir(history_data)

	for i in lst:
		ext = i.split(".")[-1]
		if ext=='md5':
			filename_part = i.split("."+ext)[0]  #去掉md5之后的文件名
			if filename_part in lst:
				md5_string = os.system("cd %s;md5sum %s"%(dirname_data,filename_part))
				file_md5_string = os.system("cat %s"%dirname_data+"/"+i)
				if md5_string != file_md5_string:
						rests = {"code":0,"result":"md5sum验证失败"}
						rst.append(rests)               
            			#文件移动到history_data下
						os.system("mv %s %s"%(dirname_data+"/"+i,history_data+"/"))
						os.system("mv %s %s"%(dirname_data+"/"+filename_part,history_data+"/"))
				else:
					size = os.path.getsize(dirname_data+"/"+filename_part)
					rests = {"code":1,"size":size,"filename":i,"dirname":dirname_data}
					rst.append(rests)
					os.system("mv %s %s"%(dirname_data+"/"+i,history_data+"/"))
					os.system("cp %s %s"%(dirname_data+"/"+filename_part,history_data+"/"))
			else:
    			#有MD5文件 但没有数据文件，
				print("this is no md5 relation documents ")
				rests = {"code":0,"result":"no data file"}
				rst.append(rests) 
				os.system("mv %s %s"%(dirname_data+"/"+i,history_data+"/"))
		else:
			os.system("cp %s %s"%(dirname_data+"/"+i,history_data+"/"))
			size = os.path.getsize(dirname_data+"/"+i)
			rests = {"code":1,"size":size,"filename":i,"dirname":dirname_data}
			rst.append(rests)
	res = json.dumps(rst)
	return res
#res = json.dumps(rst)
#return res	

def file_type(dirpath,filename):
      	file =  dirpath+filename
	md5file = file+".md5"		
	md5_string = os.system("cd %s;md5sum %s"%(dirpath,filename))
	file_md5_string = os.system("cat %s"%md5file)
	#print(md5_string)
	#print(file_md5_string)
	if md5_string != file_md5_string:
		res = {"code":10003,"result":"md5sum验证失败"}
	else:
		res = {"code":200, "result":"md5sum验证成功"}
	res = json.dumps(res)
	return res

if __name__ == '__main__':
	res = upload_ftp('172.26.16.89',21,'detuoftp','detuoftp','/opt/datatom/ftpdata/','base_test1','huanbaoju')
	print(res)
	#file_type("/tmp/mingquan/","base_test1_2019.txt")





